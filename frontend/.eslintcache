[{"/Users/saipavannarasaraj/Documents/Personal Projects/Sanjith/dbms/dbms/frontend/src/index.js":"1","/Users/saipavannarasaraj/Documents/Personal Projects/Sanjith/dbms/dbms/frontend/src/components/Conformation.js":"2","/Users/saipavannarasaraj/Documents/Personal Projects/Sanjith/dbms/dbms/frontend/src/components/CustomerForm.js":"3","/Users/saipavannarasaraj/Documents/Personal Projects/Sanjith/dbms/dbms/frontend/src/components/SignIn.js":"4","/Users/saipavannarasaraj/Documents/Personal Projects/Sanjith/dbms/dbms/frontend/src/components/Mainpage.js":"5","/Users/saipavannarasaraj/Documents/Personal Projects/Sanjith/dbms/dbms/frontend/src/components/AdminPage.js":"6","/Users/saipavannarasaraj/Documents/Personal Projects/Sanjith/dbms/dbms/frontend/src/components/Header.js":"7","/Users/saipavannarasaraj/Documents/Personal Projects/Sanjith/dbms/dbms/frontend/src/components/CarDisplay.js":"8","/Users/saipavannarasaraj/Documents/Personal Projects/Sanjith/dbms/dbms/frontend/src/components/AddCarModal.js":"9","/Users/saipavannarasaraj/Documents/Personal Projects/Sanjith/dbms/dbms/frontend/src/components/BookingInfo.js":"10"},{"size":1127,"mtime":1609058026434,"results":"11","hashOfConfig":"12"},{"size":188,"mtime":1609023668414,"results":"13","hashOfConfig":"12"},{"size":3871,"mtime":1609023668414,"results":"14","hashOfConfig":"12"},{"size":1631,"mtime":1609028120556,"results":"15","hashOfConfig":"12"},{"size":1037,"mtime":1609043768733,"results":"16","hashOfConfig":"12"},{"size":3758,"mtime":1609058065922,"results":"17","hashOfConfig":"12"},{"size":522,"mtime":1609061821216,"results":"18","hashOfConfig":"12"},{"size":3616,"mtime":1609058108017,"results":"19","hashOfConfig":"12"},{"size":3327,"mtime":1609046685413,"results":"20","hashOfConfig":"12"},{"size":3326,"mtime":1609061622163,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"18h6j9e",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/saipavannarasaraj/Documents/Personal Projects/Sanjith/dbms/dbms/frontend/src/index.js",["47"],"/Users/saipavannarasaraj/Documents/Personal Projects/Sanjith/dbms/dbms/frontend/src/components/Conformation.js",[],["48","49"],"/Users/saipavannarasaraj/Documents/Personal Projects/Sanjith/dbms/dbms/frontend/src/components/CustomerForm.js",["50","51"],"import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"./css/form.css\";\nimport { withRouter } from \"react-router-dom\";\nclass CustomerForm extends Component {\n  submit = async (e) => {\n    e.preventDefault();\n    const firstName = e.target.elements.fname.value.trim();\n    const lastName = e.target.elements.lname.value.trim();\n    const email = e.target.elements.email.value.trim();\n    const age = e.target.elements.age.value;\n    const address = e.target.elements.address.value.trim();\n    const DLNumber = e.target.elements.dlnumber.value.trim();\n    const phoneNo = e.target.elements.phoneno.value.trim();\n    const start = e.target.elements.start.value.trim();\n    const end = e.target.elements.end.value.trim();\n    const name = firstName + \" \" + lastName;\n    try {\n      const data = {\n        name,\n        age,\n        email,\n        age,\n        address,\n        DLNumber,\n        phoneNo,\n        start,\n        end,\n        car_id: this.props.location.state._id,\n      };\n      const res = await axios.post(\n        \"http://localhost:4000/createCustomer\",\n        data\n      );\n      this.props.history.push({\n        pathname: \"/conformation\",\n        state: this.props.data,\n      });\n    } catch (error) {\n      alert(\"server down\");\n    }\n  };\n  render() {\n    return (\n      <div>\n        <div>\n          <h2 style={{ textAlign: \"center\", fontFamily: \"serif\" }}>\n            Enter Details\n          </h2>\n        </div>\n        <div className=\"container\">\n          <form onSubmit={this.submit}>\n            <label for=\"fname\">First Name</label>\n            <input\n              type=\"text\"\n              id=\"fname\"\n              name=\"firstname\"\n              placeholder=\"Your name..\"\n              required\n            />\n\n            <label for=\"lname\">Last Name</label>\n            <input\n              type=\"text\"\n              id=\"lname\"\n              name=\"lastname\"\n              placeholder=\"Your last name..\"\n              required\n            />\n            <label for=\"age\" style={{ marginRight: \"10px\" }}>\n              Age\n            </label>\n            <input\n              type=\"number\"\n              id=\"age\"\n              name=\"age\"\n              placeholder=\"Your age..\"\n              required\n            />\n            <br />\n            <br />\n            <label for=\"email\">Email</label>\n            <input\n              type=\"text\"\n              id=\"email\"\n              name=\"email\"\n              placeholder=\"Your Email..\"\n              required\n            />\n            <label for=\"phoneno\">Phone Number</label>\n            <input\n              type=\"text\"\n              id=\"phoneno\"\n              name=\"phoneno\"\n              placeholder=\"Your Phone Number..\"\n              required\n            />\n            <label for=\"address\">Address</label>\n            <input\n              type=\"text\"\n              id=\"address\"\n              name=\"address\"\n              placeholder=\"Your Address..\"\n              required\n            />\n            <label for=\"dlnumber\">DL Number</label>\n            <input\n              type=\"text\"\n              id=\"dlnumber\"\n              name=\"dlnumber\"\n              placeholder=\"Your DL Number..\"\n              required\n            />\n            <label for=\"start\">start date</label>\n            <input\n              type=\"date\"\n              id=\"start\"\n              name=\"start\"\n              placeholder=\"Start Date..\"\n              required\n            />\n            <label for=\"end\">End Date</label>\n            <input\n              type=\"date\"\n              id=\"end\"\n              name=\"end\"\n              placeholder=\"End Date..\"\n              required\n            />\n            <br />\n            <br />\n            <input type=\"submit\" value=\"Submit\" />\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\nexport default withRouter(CustomerForm);\n","/Users/saipavannarasaraj/Documents/Personal Projects/Sanjith/dbms/dbms/frontend/src/components/SignIn.js",["52"],"import React, { Component } from \"react\";\nimport \"./css/signin.css\";\nimport { withRouter } from \"react-router-dom\";\nimport axios from \"axios\";\nclass SignIn extends Component {\n  login = async (e) => {\n    e.preventDefault();\n    const email = e.target.elements.uname.value;\n    const password = e.target.elements.psw.value;\n    const data = {\n      email,\n      password,\n    };\n    try {\n      const res = await axios.post(\"http://localhost:4000/login\", data);\n      console.log(res);\n      if (res.status == 200) {\n        // this.props.history.push({\n        //   pathname: \"/AdminPage\",\n        // });\n      } else {\n        alert(\"incorrect Password or Email ID\");\n      }\n    } catch (e) {\n      alert(\"incorrect Password or Email ID\");\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.login}>\n          <div className=\"container\">\n            <label for=\"uname\">\n              <b>Username</b>\n            </label>\n            <input\n              type=\"text\"\n              placeholder=\"Enter Username\"\n              name=\"uname\"\n              required\n            />\n\n            <label for=\"psw\">\n              <b>Password</b>\n            </label>\n            <input\n              type=\"password\"\n              placeholder=\"Enter Password\"\n              name=\"psw\"\n              required\n            />\n\n            <button type=\"submit\">Login</button>\n            <label>\n              <input type=\"checkbox\" checked=\"checked\" name=\"remember\" />{\" \"}\n              Remember me\n            </label>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\nexport default withRouter(SignIn);\n","/Users/saipavannarasaraj/Documents/Personal Projects/Sanjith/dbms/dbms/frontend/src/components/Mainpage.js",["53"],"import Axios from \"axios\";\nimport React, { Component } from \"react\";\nimport CarDisplay from \"./CarDisplay\";\nexport default class Mainpage extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount(){\n    this.getCarInfo();\n  }\n\n  state = {\n    cars: null,\n    loading: true\n  };\n  getCarInfo = async () => {\n    try {\n      const data = await Axios.get(\"http://localhost:4000/unreserved\");\n      console.log(data.data);\n      this.setState({\n        cars: data.data,\n        loading: false\n      });\n    } catch (e) {\n      alert(\"server is down\");\n      this.setState({\n        loading: false\n      });\n    }\n  };\n  render() {\n    return (\n      <div>\n        { this.state.loading ? (<div class=\"loader\"></div>) : null}\n        {!this.state.loading && this.state.cars &&\n          (this.state.cars.length ? (\n            this.state.cars.map((car) => {\n              return <CarDisplay data={car} />;\n            })\n          ) : (\n            <h1>No Car Available</h1>\n          ))}\n      </div>\n    );\n  }\n}\n","/Users/saipavannarasaraj/Documents/Personal Projects/Sanjith/dbms/dbms/frontend/src/components/AdminPage.js",[],"/Users/saipavannarasaraj/Documents/Personal Projects/Sanjith/dbms/dbms/frontend/src/components/Header.js",[],"/Users/saipavannarasaraj/Documents/Personal Projects/Sanjith/dbms/dbms/frontend/src/components/CarDisplay.js",["54","55","56"],"/Users/saipavannarasaraj/Documents/Personal Projects/Sanjith/dbms/dbms/frontend/src/components/AddCarModal.js",["57"],"import React, { Component } from \"react\";\nimport axios from \"axios\";\nexport class AddCarModal extends Component {\n    closeModal = () => {    \n        document.getElementById(\"carForm\").reset();\n        this.props.closeModal();\n    }   \n  render() {\n    return (\n      <>\n        <div id=\"id01\" style={{display: \"block\", paddingBottom: \"5%\"}} className=\"w3-modal\">\n        <div className=\"w3-modal-content\">\n            <header className=\"w3-container w3-teal\">\n                <h2>Add car</h2>\n            </header>\n            <div className=\"w3-container\" style={{padding: 0}}>\n                <form id=\"carForm\" method=\"POST\" action=\"http://localhost:4000/createcar\" enctype=\"multipart/form-data\">\n                    <label for=\"name\">Name</label>\n                    <input\n                        type=\"text\"\n                        id=\"name\"\n                        name=\"name\"\n                        placeholder=\"Name..\"\n                        required\n                    />\n\n                    <label htmlFor=\"type\">Type</label>\n                    <input\n                        type=\"text\"\n                        id=\"type\"\n                        name=\"type\"\n                        placeholder=\"Car type..\"\n                        required\n                    />\n\n                    <label htmlFor=\"company\">Company</label>\n                    <input\n                        type=\"text\"\n                        id=\"company\"\n                        name=\"company\"\n                        placeholder=\"Company..\"\n                        required\n                    />\n\n                    <label htmlFor=\"cost\">Cost</label>\n                    <br />\n                    <input\n                        type=\"number\"\n                        id=\"cost\"\n                        name=\"cost\"\n                        style={{marginBottom: \"1%\", marginTop: \"1%\"}}\n                        placeholder=\"Cost..\"\n                        required\n                    />\n                    <br />\n                    \n                    <label htmlFor=\"engineType\">Engine Type</label>\n                    <input\n                        type=\"text\"\n                        id=\"engineType\"\n                        name=\"engineType\"\n                        placeholder=\"Engine Type..\"\n                        required\n                    />\n\n                    <label htmlFor=\"fuel\">Fuel</label>\n                    <input\n                        type=\"text\"\n                        id=\"fuel\"\n                        name=\"fuel\"\n                        placeholder=\"Fuel..\"\n                        required\n                    />\n\n                    <label htmlFor=\"image\">Image</label>\n                    <br />\n                    <input\n                        type=\"file\"\n                        id=\"image\"\n                        name=\"image\"\n                        required\n                    />\n                    <br />\n                    <br />\n                    <div style={{marginLeft: \"60%\", display: \"flex\"}}>\n                        <button className=\"cbutton\" onClick={() => this.closeModal()}>Cancel</button>\n                        <input type=\"submit\" value=\"Submit\" />\n                    </div>\n                </form>\n            </div>\n            </div>\n        </div>\n      </>\n    );\n  }\n}\n","/Users/saipavannarasaraj/Documents/Personal Projects/Sanjith/dbms/dbms/frontend/src/components/BookingInfo.js",["58"],{"ruleId":"59","severity":1,"message":"60","line":11,"column":20,"nodeType":"61","messageId":"62","endLine":11,"endColumn":26},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":23,"column":9,"nodeType":"69","messageId":"70","endLine":23,"endColumn":12},{"ruleId":"59","severity":1,"message":"71","line":31,"column":13,"nodeType":"61","messageId":"62","endLine":31,"endColumn":16},{"ruleId":"72","severity":1,"message":"73","line":17,"column":22,"nodeType":"74","messageId":"70","endLine":17,"endColumn":24},{"ruleId":"75","severity":1,"message":"76","line":5,"column":3,"nodeType":"77","messageId":"78","endLine":7,"endColumn":4},{"ruleId":"59","severity":1,"message":"79","line":9,"column":8,"nodeType":"61","messageId":"62","endLine":9,"endColumn":13},{"ruleId":"75","severity":1,"message":"76","line":12,"column":3,"nodeType":"77","messageId":"78","endLine":14,"endColumn":4},{"ruleId":"80","severity":1,"message":"81","line":41,"column":21,"nodeType":"82","endLine":47,"endColumn":23},{"ruleId":"59","severity":1,"message":"79","line":2,"column":8,"nodeType":"61","messageId":"62","endLine":2,"endColumn":13},{"ruleId":"80","severity":1,"message":"81","line":80,"column":18,"nodeType":"82","endLine":80,"endColumn":71},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-dupe-keys","Duplicate key 'age'.","ObjectExpression","unexpected","'res' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'axios' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]